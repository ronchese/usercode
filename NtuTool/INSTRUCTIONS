

 ----- to use the package in CMSSW -----

cd ${CMSSW_BASE}/src
cvs co UserCode/PaoloRonch
mv UserCode/PaoloRonch/NtuTool .
scram b

 ----- to export the tool outside -----

cd ${CMSSW_BASE}/src
cvs co UserCode/PaoloRonch
mv UserCode/PaoloRonch/NtuTool .
NtuTool/uty/export.sh

copy the file NtuTool.tgz wherever you want to install the tool, then

tar -xzf NtuTool.tgz
cd NtuTool
uty/install.sh
. uty/envset.sh
uty/compile.sh

to compile using a c++/ROOT environment as defined in a CMSSW release
do the following

uty/compile.sh X_Y_Z

where X_Y_Z is the CMSSW version, e.g. 4_2_3 . To compile for all 
available CMSSW versions do the following

uty/go_compileNtuTool.sh

 ----- running examples - write -----

an example that write a simple ROOT tree with no use of the tool
functionalities, just as a comparison; it produces "simple_tree.root"
that contains simply the run number

cd ${CMSSW_BASE}/src/NtuTool/EDM/test
cmsRun treew.py

---

an example that does the same operation using the tool, to show how 
the code changes; it produces "ntuple_base.root"

cd ${CMSSW_BASE}/src/NtuTool/EDM/test
cmsRun sntuw.py

---

an example that write the same informations in and EDM ntuple; 
it produces "ntuple_edm.root"

cd ${CMSSW_BASE}/src/NtuTool/EDM/test
cmsRun sedmw.py

 ----- running examples - read in a CMSSW area -----

compile the examples

cd ${CMSSW_BASE}/src/NtuTool/Read/test
compileCMSSW.sh

then copy the previously produced .root files

---

read "ntuple_base.root"

treeAnalyze_Base ntuList -n 6 -s 2 hs.root x

ntuList is a text file with the list of the files to read
hs.root is the ouptut histogram file
-n      set the max number of events to read, if negative its applied 
        to each input file
-s      set the number of events to skip, if negative its applied 
        to each input file
x       a flag to draw the histograms at the end (as coded in plot() )
        at the end of the execution

alternatives:

i       a flag to have a ROOT prompt at the end of the execution
j       a flag to draw the histograms at the end (as coded in plot() )
        at the end of the execution and then have a ROOT prompt
b       a flag to simply save the histograms

---

read "ntuple_edm.root"

treeAnalyze_EDM edmList -n 6 -s 2 hs.root x

 ----- export examples outside -----

complete the writing examples described above, then do the following

cd ${CMSSW_BASE}/src/NtuTool/Read/test
exportExample.sh

copy the file examples.tgz wherever you want

 ----- running examples - read in a CMSSW area -----

tar -xzf examples.tgz
compileExample.sh

then run in the same way as before

